{"ast":null,"code":"export default {\n  name: \"OrderinfoDialog\",\n  props: {\n    OrderinfoDialogFlag: {\n      default: false\n    },\n    meetingId: {\n      type: String\n    },\n    marketId: {\n      type: String\n    }\n  },\n  data() {\n    return {\n      visible: false,\n      uid: this.$store.getters.getUser.role.uid,\n      CmeetingId: \"\",\n      CmarketId: \"\",\n      orderVoList: [],\n      orderData: [],\n      chosedOrderData: [],\n      maxOrder: 3\n    };\n  },\n  methods: {\n    handleSelectionChange(val) {\n      this.orderVoList = val;\n      // console.log(this.orderVoList)\n    },\n\n    limitFn(list) {\n      this.$refs.multipleTable.clearSelection(); //用于多选表格，清空用户的选择\n      for (let i = 0; i < this.max; i++) {\n        this.$refs.multipleTable.toggleRowSelection(list[i]); //用于多选表格，切换某一行的选中状态，如果使用了第二个参数，则是设置这一行选中与否（selected 为 true 则选中）\n      }\n    },\n\n    chooseOrder() {\n      this.postRequest(\"/order/selectOrder?uid=\" + this.uid + \"&meetingId=\" + this.CmeetingId + \"&marketId=\" + this.CmarketId, this.orderVoList).then(resp => {\n        if (resp.data.msg == \"成功\") {\n          this.$message({\n            message: \"选择成功\",\n            type: \"success\"\n          });\n          this.$emit(\"update:OrderinfoDialogFlag\", false);\n          this.orderVoList = [];\n        } else {\n          this.$message.error(\"选择失败\");\n        }\n      });\n    },\n    // withdrawOrder(index, row) {\n    //   this.isChosed[index] = -1;\n    //   console.log(this.isChosed[index])\n    //   for (var i = 0; i < this.chosedOrderData.length; i++) {\n    //     if (this.chosedOrderData[i].orderId == row.orderId) {\n    //       this.chosedOrderData.splice(i);\n    //       console.log(this.chosedOrderData);\n    //     }\n    //   }\n    // },\n    // chooseOrder(index, row) {\n    //   this.isChosed[index] = index;\n    //   console.log(this.isChosed[index]);\n    //   this.chosedOrderData.push(row);\n    //   console.log(this.chosedOrderData);\n    // },\n    OrderinfoDialogClose() {\n      this.$emit(\"update:OrderinfoDialogFlag\", false);\n      //   console.log(this.OrderinfoDialogFlag)\n    },\n\n    loadOrder() {\n      this.getRequest(\"/order/getOrderAvailable?meetingId=\" + this.CmeetingId + \"&marketId=\" + this.CmarketId + \"&uid=\" + this.uid).then(resp => {\n        if (resp) {\n          this.orderData = resp.data.data;\n          // for (var i = 0; i < this.orderData.length; i++) {\n          //   this.isChosed[i] = -1;\n          // }\n        }\n      });\n    }\n  },\n\n  watch: {\n    OrderinfoDialogFlag() {\n      this.visible = this.OrderinfoDialogFlag;\n      this.CmarketId = this.marketId;\n      this.CmeetingId = this.meetingId;\n      this.loadOrder();\n      // console.log(this.isChosed[0]);\n      // console.log(this.CmarketId);\n      // console.log(this.CmeetingId);\n    }\n  }\n};","map":{"version":3,"names":["name","props","OrderinfoDialogFlag","default","meetingId","type","String","marketId","data","visible","uid","$store","getters","getUser","role","CmeetingId","CmarketId","orderVoList","orderData","chosedOrderData","maxOrder","methods","handleSelectionChange","val","limitFn","list","$refs","multipleTable","clearSelection","i","max","toggleRowSelection","chooseOrder","postRequest","then","resp","msg","$message","message","$emit","error","OrderinfoDialogClose","loadOrder","getRequest","watch"],"sources":["src/components/orderinfo.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-dialog\r\n      title=\"可选订单\"\r\n      :visible.sync=\"visible\"\r\n      :close-on-click-modal=\"false\"\r\n      @close=\"OrderinfoDialogClose\"\r\n      :append-to-body=\"true\"\r\n    >\r\n      <div class=\"bg_div\">\r\n        <el-table\r\n          :data=\"orderData\"\r\n          style=\"width: 100%\"\r\n          height=\"250\"\r\n          @selection-change=\"handleSelectionChange\"\r\n        >\r\n          <el-table-column type=\"selection\"></el-table-column>\r\n          <el-table-column fixed prop=\"orderId\" label=\"订单编号\" width=\"150\">\r\n          </el-table-column>\r\n          <el-table-column prop=\"time\" label=\"年度\"> </el-table-column>\r\n          <el-table-column prop=\"market\" label=\"市场\"> </el-table-column>\r\n          <el-table-column prop=\"amount\" label=\"数量\"> </el-table-column>\r\n          <el-table-column prop=\"price\" label=\"单价\"> </el-table-column>\r\n          <el-table-column prop=\"total\" label=\"总价\"> </el-table-column>\r\n          <el-table-column prop=\"period\" label=\"账期\"> </el-table-column>\r\n          <el-table-column label=\"条件\">\r\n            <template slot-scope=\"scope\">\r\n              <el-tag v-if=\"scope.row.urgent === '加急'\">加急</el-tag>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column label=\"iso认证\" width=\"100\">\r\n            <template slot-scope=\"scope\">\r\n              <el-tag v-if=\"scope.row.iso === ' '\">ISO9000</el-tag>\r\n              <el-tag v-else-if=\"scope.row.iso === 'ISO14000'\">ISO14000</el-tag>\r\n              <el-tag v-else-if=\"scope.row.iso === 'ISO9000/ISO14000'\"\r\n                >ISO9000/ISO14000</el-tag\r\n              >\r\n            </template>\r\n          </el-table-column>\r\n          <!-- <el-table-column fixed=\"right\" label=\"操作\" width=\"100\">\r\n            <template slot-scope=\"scope\">\r\n              <el-button\r\n                v-if=\"isChosed[scope.$index] === -1\"\r\n                @click=\"chooseOrder(scope.$index, scope.row)\"\r\n                type=\"primary\"\r\n                size=\"small\"\r\n                >选择</el-button\r\n              >\r\n              <el-button\r\n                v-else-if=\"isChosed[scope.$index] === scope.$index\"\r\n                @click=\"withdrawOrder(scope.$index, scope.row)\"\r\n                type=\"danger\"\r\n                size=\"small\"\r\n                >退选</el-button\r\n              >\r\n            </template>\r\n          </el-table-column> -->\r\n        </el-table>\r\n      </div>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"OrderinfoDialogClose\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"chooseOrder\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"OrderinfoDialog\",\r\n  props: {\r\n    OrderinfoDialogFlag: {\r\n      default: false,\r\n    },\r\n    meetingId: {\r\n      type: String,\r\n    },\r\n    marketId: {\r\n      type: String,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      visible: false,\r\n      uid: this.$store.getters.getUser.role.uid,\r\n      CmeetingId: \"\",\r\n      CmarketId: \"\",\r\n      orderVoList: [],\r\n      orderData: [],\r\n      chosedOrderData: [],\r\n      maxOrder: 3,\r\n    };\r\n  },\r\n  methods: {\r\n    handleSelectionChange(val) {\r\n      \r\n      this.orderVoList = val;\r\n      // console.log(this.orderVoList)\r\n    },\r\n    limitFn(list) {\r\n      this.$refs.multipleTable.clearSelection(); //用于多选表格，清空用户的选择\r\n      for (let i = 0; i < this.max; i++) {\r\n        this.$refs.multipleTable.toggleRowSelection(list[i]); //用于多选表格，切换某一行的选中状态，如果使用了第二个参数，则是设置这一行选中与否（selected 为 true 则选中）\r\n      }\r\n    },\r\n    chooseOrder() {\r\n      this.postRequest(\r\n        \"/order/selectOrder?uid=\" +\r\n          this.uid +\r\n          \"&meetingId=\" +\r\n          this.CmeetingId +\r\n          \"&marketId=\" +\r\n          this.CmarketId,\r\n        this.orderVoList\r\n      ).then((resp) => {\r\n        if (resp.data.msg == \"成功\") {\r\n          this.$message({\r\n            message: \"选择成功\",\r\n            type: \"success\",\r\n          });\r\n          this.$emit(\"update:OrderinfoDialogFlag\", false);\r\n          this.orderVoList = [];\r\n        } else {\r\n          this.$message.error(\"选择失败\");\r\n        }\r\n      });\r\n    },\r\n    // withdrawOrder(index, row) {\r\n    //   this.isChosed[index] = -1;\r\n    //   console.log(this.isChosed[index])\r\n    //   for (var i = 0; i < this.chosedOrderData.length; i++) {\r\n    //     if (this.chosedOrderData[i].orderId == row.orderId) {\r\n    //       this.chosedOrderData.splice(i);\r\n    //       console.log(this.chosedOrderData);\r\n    //     }\r\n    //   }\r\n    // },\r\n    // chooseOrder(index, row) {\r\n    //   this.isChosed[index] = index;\r\n    //   console.log(this.isChosed[index]);\r\n    //   this.chosedOrderData.push(row);\r\n    //   console.log(this.chosedOrderData);\r\n    // },\r\n    OrderinfoDialogClose() {\r\n      this.$emit(\"update:OrderinfoDialogFlag\", false);\r\n      //   console.log(this.OrderinfoDialogFlag)\r\n    },\r\n    loadOrder() {\r\n      this.getRequest(\r\n        \"/order/getOrderAvailable?meetingId=\" +\r\n          this.CmeetingId +\r\n          \"&marketId=\" +\r\n          this.CmarketId +\r\n          \"&uid=\" +\r\n          this.uid\r\n      ).then((resp) => {\r\n        if (resp) {\r\n          this.orderData = resp.data.data;\r\n          // for (var i = 0; i < this.orderData.length; i++) {\r\n          //   this.isChosed[i] = -1;\r\n          // }\r\n        }\r\n      });\r\n    },\r\n  },\r\n  watch: {\r\n    OrderinfoDialogFlag() {\r\n      this.visible = this.OrderinfoDialogFlag;\r\n      this.CmarketId = this.marketId;\r\n      this.CmeetingId = this.meetingId;\r\n      this.loadOrder();\r\n      // console.log(this.isChosed[0]);\r\n      // console.log(this.CmarketId);\r\n      // console.log(this.CmeetingId);\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n</style>"],"mappings":"AAoEA;EACAA,IAAA;EACAC,KAAA;IACAC,mBAAA;MACAC,OAAA;IACA;IACAC,SAAA;MACAC,IAAA,EAAAC;IACA;IACAC,QAAA;MACAF,IAAA,EAAAC;IACA;EACA;EACAE,KAAA;IACA;MACAC,OAAA;MACAC,GAAA,OAAAC,MAAA,CAAAC,OAAA,CAAAC,OAAA,CAAAC,IAAA,CAAAJ,GAAA;MACAK,UAAA;MACAC,SAAA;MACAC,WAAA;MACAC,SAAA;MACAC,eAAA;MACAC,QAAA;IACA;EACA;EACAC,OAAA;IACAC,sBAAAC,GAAA;MAEA,KAAAN,WAAA,GAAAM,GAAA;MACA;IACA;;IACAC,QAAAC,IAAA;MACA,KAAAC,KAAA,CAAAC,aAAA,CAAAC,cAAA;MACA,SAAAC,CAAA,MAAAA,CAAA,QAAAC,GAAA,EAAAD,CAAA;QACA,KAAAH,KAAA,CAAAC,aAAA,CAAAI,kBAAA,CAAAN,IAAA,CAAAI,CAAA;MACA;IACA;;IACAG,YAAA;MACA,KAAAC,WAAA,CACA,4BACA,KAAAvB,GAAA,GACA,gBACA,KAAAK,UAAA,GACA,eACA,KAAAC,SAAA,EACA,KAAAC,WAAA,CACA,CAAAiB,IAAA,CAAAC,IAAA;QACA,IAAAA,IAAA,CAAA3B,IAAA,CAAA4B,GAAA;UACA,KAAAC,QAAA;YACAC,OAAA;YACAjC,IAAA;UACA;UACA,KAAAkC,KAAA;UACA,KAAAtB,WAAA;QACA;UACA,KAAAoB,QAAA,CAAAG,KAAA;QACA;MACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAC,qBAAA;MACA,KAAAF,KAAA;MACA;IACA;;IACAG,UAAA;MACA,KAAAC,UAAA,CACA,wCACA,KAAA5B,UAAA,GACA,eACA,KAAAC,SAAA,GACA,UACA,KAAAN,GAAA,CACA,CAAAwB,IAAA,CAAAC,IAAA;QACA,IAAAA,IAAA;UACA,KAAAjB,SAAA,GAAAiB,IAAA,CAAA3B,IAAA,CAAAA,IAAA;UACA;UACA;UACA;QACA;MACA;IACA;EACA;;EACAoC,KAAA;IACA1C,oBAAA;MACA,KAAAO,OAAA,QAAAP,mBAAA;MACA,KAAAc,SAAA,QAAAT,QAAA;MACA,KAAAQ,UAAA,QAAAX,SAAA;MACA,KAAAsC,SAAA;MACA;MACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}