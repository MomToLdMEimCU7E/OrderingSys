{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { postRequest } from \"@/utils/api\";\nexport default {\n  name: \"Login\",\n  data() {\n    return {\n      loading: false,\n      loginForm: {\n        username: \"\",\n        password: \"\"\n      },\n      loginRules: {\n        username: [{\n          required: true,\n          message: \"请输入用户名\",\n          trigger: \"blur\"\n        }],\n        password: [{\n          required: true,\n          message: \"请输入密码\",\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  methods: {\n    gotoLogin() {\n      this.$router.push({\n        path: \"/\"\n      });\n    },\n    submitLogin() {\n      // if (\n      //   this.loginForm.username == \"tea\" &&\n      //   this.loginForm.password == \"123456\"\n      // )\n      //   this.$router.replace(\"/home\");\n      this.$refs.loginForm.validate(valid => {\n        if (valid) {\n          this.loading = true;\n          this.postRequest(\"/user/login?username=\" + this.loginForm.username + \"&password=\" + this.loginForm.password).then(resp => {\n            if (resp.data.code == \"0\") {\n              //存储用户token\n              // const tokenStr = resp.obj.tokenHead + resp.obj.token;\n              // window.sessionStorage.setItem(\"tokenStr\", tokenStr);\n              this.$store.dispatch(\"asyncUpdateUser\", {\n                role: resp.data.data\n              });\n              //跳转页面\n              this.$router.replace(\"/home\");\n              this.$message({\n                message: \"登录成功\",\n                type: \"success\"\n              });\n            } else {\n              this.loading = false;\n              this.$message.error(\"登陆失败，请检查账号密码\");\n            }\n          });\n        } else {\n          this.$message.error(\"请输入所有信息\");\n          return false;\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["postRequest","name","data","loading","loginForm","username","password","loginRules","required","message","trigger","methods","gotoLogin","$router","push","path","submitLogin","$refs","validate","valid","then","resp","code","$store","dispatch","role","replace","$message","type","error"],"sources":["src/views/register.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-form\r\n      :rules=\"loginRules\"\r\n      v-loading=\"loading\"\r\n      element-loading-text=\"注册中,请稍等\"\r\n      element-loading-spinner=\"el-icon-loading\"\r\n      element-loading-background=\"rgba(0,0,0,0.8)\"\r\n      ref=\"loginForm\"\r\n      :model=\"loginForm\"\r\n      class=\"loginContainer\"\r\n    >\r\n      <h3 class=\"loginTitle\">注册</h3>\r\n      <el-form-item prop=\"username\">\r\n        <el-input\r\n          type=\"text\"\r\n          auto-complete=\"false\"\r\n          v-model=\"loginForm.username\"\r\n          placeholder=\"请输入用户名\"\r\n        ></el-input>\r\n      </el-form-item>\r\n      <el-form-item prop=\"password\">\r\n        <el-input\r\n          type=\"password\"\r\n          auto-complete=\"false\"\r\n          v-model=\"loginForm.password\"\r\n          placeholder=\"请输入密码\"\r\n        ></el-input>\r\n      </el-form-item>\r\n      <el-form-item prop=\"password\">\r\n        <el-input\r\n          type=\"password\"\r\n          auto-complete=\"false\"\r\n          v-model=\"loginForm.password\"\r\n          placeholder=\"请选择班级\"\r\n        ></el-input>\r\n      </el-form-item>\r\n      <div class=\"buttonArea\">\r\n        <el-button type=\"info\" style=\"width: 40%\" @click=\"gotoLogin\"\r\n          >返回登录</el-button\r\n        >\r\n        <el-button type=\"primary\" style=\"width: 40%\" @click=\"submitLogin\"\r\n          >注册</el-button\r\n        >\r\n      </div>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { postRequest } from \"@/utils/api\";\r\nexport default {\r\n  name: \"Login\",\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      loginForm: {\r\n        username: \"\",\r\n        password: \"\",\r\n      },\r\n      loginRules: {\r\n        username: [\r\n          {\r\n            required: true,\r\n            message: \"请输入用户名\",\r\n            trigger: \"blur\",\r\n          },\r\n        ],\r\n        password: [\r\n          {\r\n            required: true,\r\n            message: \"请输入密码\",\r\n            trigger: \"blur\",\r\n          },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    gotoLogin() {\r\n      this.$router.push({ path: \"/\" });\r\n    },\r\n    submitLogin() {\r\n      // if (\r\n      //   this.loginForm.username == \"tea\" &&\r\n      //   this.loginForm.password == \"123456\"\r\n      // )\r\n      //   this.$router.replace(\"/home\");\r\n      this.$refs.loginForm.validate((valid) => {\r\n        if (valid) {\r\n          this.loading = true;\r\n          this.postRequest(\r\n            \"/user/login?username=\" +\r\n              this.loginForm.username +\r\n              \"&password=\" +\r\n              this.loginForm.password\r\n          ).then((resp) => {\r\n            if (resp.data.code == \"0\") {\r\n              //存储用户token\r\n              // const tokenStr = resp.obj.tokenHead + resp.obj.token;\r\n              // window.sessionStorage.setItem(\"tokenStr\", tokenStr);\r\n              this.$store.dispatch(\"asyncUpdateUser\", { role: resp.data.data });\r\n              //跳转页面\r\n              this.$router.replace(\"/home\");\r\n              this.$message({\r\n                message: \"登录成功\",\r\n                type: \"success\",\r\n              });\r\n            } else {\r\n              this.loading = false;\r\n              this.$message.error(\"登陆失败，请检查账号密码\");\r\n            }\r\n          });\r\n        } else {\r\n          this.$message.error(\"请输入所有信息\");\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.loginContainer {\r\n  border-radius: 15px;\r\n  background-clip: padding-box;\r\n  margin: 100px auto;\r\n  width: 350px;\r\n  padding: 15px 35px;\r\n  background-color: #fff;\r\n  border: 1px solid #eaeaee;\r\n  box-shadow: 0 0 25px #cac6;\r\n}\r\n.loginTitle {\r\n  margin: 5%;\r\n  text-align: center;\r\n}\r\n.buttonArea {\r\n  text-align: center;\r\n}\r\n</style>"],"mappings":";AAkDA,SAAAA,WAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,SAAA;QACAC,QAAA;QACAC,QAAA;MACA;MACAC,UAAA;QACAF,QAAA,GACA;UACAG,QAAA;UACAC,OAAA;UACAC,OAAA;QACA,EACA;QACAJ,QAAA,GACA;UACAE,QAAA;UACAC,OAAA;UACAC,OAAA;QACA;MAEA;IACA;EACA;EACAC,OAAA;IACAC,UAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;QAAAC,IAAA;MAAA;IACA;IACAC,YAAA;MACA;MACA;MACA;MACA;MACA;MACA,KAAAC,KAAA,CAAAb,SAAA,CAAAc,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAhB,OAAA;UACA,KAAAH,WAAA,CACA,0BACA,KAAAI,SAAA,CAAAC,QAAA,GACA,eACA,KAAAD,SAAA,CAAAE,QAAA,CACA,CAAAc,IAAA,CAAAC,IAAA;YACA,IAAAA,IAAA,CAAAnB,IAAA,CAAAoB,IAAA;cACA;cACA;cACA;cACA,KAAAC,MAAA,CAAAC,QAAA;gBAAAC,IAAA,EAAAJ,IAAA,CAAAnB,IAAA,CAAAA;cAAA;cACA;cACA,KAAAW,OAAA,CAAAa,OAAA;cACA,KAAAC,QAAA;gBACAlB,OAAA;gBACAmB,IAAA;cACA;YACA;cACA,KAAAzB,OAAA;cACA,KAAAwB,QAAA,CAAAE,KAAA;YACA;UACA;QACA;UACA,KAAAF,QAAA,CAAAE,KAAA;UACA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}