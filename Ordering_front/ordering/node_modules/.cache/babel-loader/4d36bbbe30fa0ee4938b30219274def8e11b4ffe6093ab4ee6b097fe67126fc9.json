{"ast":null,"code":"import axios from 'axios';\nimport { Message } from 'element-ui';\nimport router from '../router';\n\n//请求拦截器\naxios.interceptors.request.use(config => {});\n\n//响应拦截器\naxios.interceptors.response.use(success => {\n  //业务逻辑错误\n  if (success.state && success.status == 200) {\n    if (success.data.code == 500 || success.data.code == 403) {\n      Message.error({\n        message: success.data.message\n      });\n      return;\n    }\n    if (success.data.message) {\n      Message.success({\n        message: success.data.message\n      });\n    }\n  }\n  return success.data;\n}, error => {\n  if (error.response.code == 504 || error.response.code == 404) {\n    Message.error({\n      message: '找不到服务惹，但我们绝对没有跑路！'\n    });\n  } else if (error.response.code == 403) {\n    Message.error({\n      message: '权限不足，请联系管理员'\n    });\n  } else if (error.response.code == 401) {\n    Message.error({\n      message: '请先登录'\n    });\n    router.replace('/');\n  } else {\n    if (error.response.data.message) {\n      Message.error({\n        message: error.response.data.message\n      });\n    } else {\n      Message.error({\n        message: '未知错误'\n      });\n    }\n  }\n  return;\n});\nlet base = 'http://localhost:9090';\nexport const postRequest = (url, params) => {\n  return axios({\n    method: 'post',\n    url: `${base}${url}`,\n    data: params\n  });\n};\nexport const putRequest = (url, params) => {\n  return axios({\n    method: 'put',\n    url: `${base}${url}`,\n    data: params\n  });\n};\nexport const getRequest = (url, params) => {\n  return axios({\n    method: 'get',\n    url: `${base}${url}`,\n    data: params\n  });\n};\nexport const deleteRequest = (url, params) => {\n  return axios({\n    method: 'delete',\n    url: `${base}${url}`,\n    data: params\n  });\n};","map":{"version":3,"names":["axios","Message","router","interceptors","request","use","config","response","success","state","status","data","code","error","message","replace","base","postRequest","url","params","method","putRequest","getRequest","deleteRequest"],"sources":["E:/hduERP/Orderingsys/Ordering_front/ordering/src/utils/api.js"],"sourcesContent":["import axios from 'axios'\r\nimport { Message } from 'element-ui'\r\nimport router from '../router'\r\n\r\n//请求拦截器\r\naxios.interceptors.request.use(config=>{\r\n    \r\n})\r\n\r\n//响应拦截器\r\naxios.interceptors.response.use(success => {\r\n    //业务逻辑错误\r\n    if (success.state && success.status == 200) {\r\n        if (success.data.code == 500 || success.data.code == 403) {\r\n            Message.error({ message: success.data.message });\r\n            return;\r\n        }\r\n        if (success.data.message) {\r\n            Message.success({ message: success.data.message });\r\n        }\r\n    }\r\n    return success.data;\r\n}, error => {\r\n    if (error.response.code == 504 || error.response.code == 404) {\r\n        Message.error({ message: '找不到服务惹，但我们绝对没有跑路！' });\r\n    } else if (error.response.code == 403) {\r\n        Message.error({ message: '权限不足，请联系管理员' })\r\n    } else if (error.response.code == 401) {\r\n        Message.error({ message: '请先登录' });\r\n        router.replace('/');\r\n    } else {\r\n        if (error.response.data.message) {\r\n            Message.error({ message: error.response.data.message });\r\n        } else {\r\n            Message.error({ message: '未知错误' });\r\n        }\r\n    }\r\n    return;\r\n})\r\n\r\nlet base = 'http://localhost:9090';\r\n\r\nexport const postRequest= (url,params)=>{\r\n    return axios({\r\n        method: 'post',\r\n        url: `${base}${url}`,\r\n        data: params\r\n    })\r\n}\r\n\r\nexport const putRequest= (url,params)=>{\r\n    return axios({\r\n        method: 'put',\r\n        url: `${base}${url}`,\r\n        data: params\r\n    })\r\n}\r\n\r\nexport const getRequest= (url,params)=>{\r\n    return axios({\r\n        method: 'get',\r\n        url: `${base}${url}`,\r\n        data: params\r\n    })\r\n}\r\n\r\nexport const deleteRequest= (url,params)=>{\r\n    return axios({\r\n        method: 'delete',\r\n        url: `${base}${url}`,\r\n        data: params\r\n    })\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}